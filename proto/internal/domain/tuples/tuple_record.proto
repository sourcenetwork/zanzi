// File contains types representing the Zanzibar's Permission Tuple data model. 
// The tuple data structure is used to persist the relation tuples in the datastore

syntax = "proto3";

package internal.domain.tuple;

option go_package = "github.com/sourcenetwork/source-zanzibar/internal/domain/tuple";

import "google/protobuf/any.proto";


// NodeType indicates the type of information stored by the node
enum NodeType {
    // Stores an Application Actor
    ACTOR = 0;

    // Stores a system object
    OBJECT = 1;

    // Stores a source of relation from one node to another
    // Recursively following a RELATION_SOURCE node lead to a set of actors / objects
    RELATION_SOURCE = 2;


    // Flags that node refers to all actors in the given namespace.
    // Used as a system constant to specify all known actors.
    ALL_ACTORS = 4;
}


// TupleNodeRecord represents a `Userset` in Zanzibar terminology.
// It represents a Node in Zanzibar's relation graph.
message TupleNodeRecord {
    string namespace = 1;
    string id = 2;
    string relation = 3;
    NodeType type = 4;
}


// TupleRecord represents a Zanzibar Relation Tuple.
// A Relation Tuple defines a statment which relates
// system objects
message TupleRecord {
    TupleNodeRecord source = 1;

    TupleNodeRecord dest = 2;

    // partition_key is used to create logical partitions over tuples
    string partition_key = 3;
}
