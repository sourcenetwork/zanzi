// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: proto/namespace.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation int32

const (
	Operation_UNION        Operation = 0
	Operation_INTERSECTION Operation = 1
	Operation_DIFFERENCE   Operation = 2
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "UNION",
		1: "INTERSECTION",
		2: "DIFFERENCE",
	}
	Operation_value = map[string]int32{
		"UNION":        0,
		"INTERSECTION": 1,
		"DIFFERENCE":   2,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_namespace_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_proto_namespace_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{0}
}

type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Relations []*Relation `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{0}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Rewrite *UsersetRewrite `protobuf:"bytes,2,opt,name=rewrite,proto3" json:"rewrite,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{1}
}

func (x *Relation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Relation) GetRewrite() *UsersetRewrite {
	if x != nil {
		return x.Rewrite
	}
	return nil
}

type UsersetRewrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpressionTree *Node `protobuf:"bytes,1,opt,name=expressionTree,proto3" json:"expressionTree,omitempty"`
}

func (x *UsersetRewrite) Reset() {
	*x = UsersetRewrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersetRewrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersetRewrite) ProtoMessage() {}

func (x *UsersetRewrite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersetRewrite.ProtoReflect.Descriptor instead.
func (*UsersetRewrite) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{2}
}

func (x *UsersetRewrite) GetExpressionTree() *Node {
	if x != nil {
		return x.ExpressionTree
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Node:
	//	*Node_Opnode
	//	*Node_Leaf
	Node isNode_Node `protobuf_oneof:"node"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{3}
}

func (m *Node) GetNode() isNode_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (x *Node) GetOpnode() *OpNode {
	if x, ok := x.GetNode().(*Node_Opnode); ok {
		return x.Opnode
	}
	return nil
}

func (x *Node) GetLeaf() *Leaf {
	if x, ok := x.GetNode().(*Node_Leaf); ok {
		return x.Leaf
	}
	return nil
}

type isNode_Node interface {
	isNode_Node()
}

type Node_Opnode struct {
	Opnode *OpNode `protobuf:"bytes,1,opt,name=opnode,proto3,oneof"`
}

type Node_Leaf struct {
	Leaf *Leaf `protobuf:"bytes,2,opt,name=leaf,proto3,oneof"`
}

func (*Node_Opnode) isNode_Node() {}

func (*Node_Leaf) isNode_Node() {}

type OpNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *Node     `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *Node     `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	Op    Operation `protobuf:"varint,3,opt,name=op,proto3,enum=namespace.Operation" json:"op,omitempty"`
}

func (x *OpNode) Reset() {
	*x = OpNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpNode) ProtoMessage() {}

func (x *OpNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpNode.ProtoReflect.Descriptor instead.
func (*OpNode) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{4}
}

func (x *OpNode) GetLeft() *Node {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *OpNode) GetRight() *Node {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *OpNode) GetOp() Operation {
	if x != nil {
		return x.Op
	}
	return Operation_UNION
}

type Leaf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *Rule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *Leaf) Reset() {
	*x = Leaf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaf) ProtoMessage() {}

func (x *Leaf) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaf.ProtoReflect.Descriptor instead.
func (*Leaf) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{5}
}

func (x *Leaf) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Rule:
	//	*Rule_This
	//	*Rule_ComputedUserset
	//	*Rule_TupleToUserset
	Rule isRule_Rule `protobuf_oneof:"rule"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{6}
}

func (m *Rule) GetRule() isRule_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (x *Rule) GetThis() *This {
	if x, ok := x.GetRule().(*Rule_This); ok {
		return x.This
	}
	return nil
}

func (x *Rule) GetComputedUserset() *ComputedUserset {
	if x, ok := x.GetRule().(*Rule_ComputedUserset); ok {
		return x.ComputedUserset
	}
	return nil
}

func (x *Rule) GetTupleToUserset() *TupleToUserset {
	if x, ok := x.GetRule().(*Rule_TupleToUserset); ok {
		return x.TupleToUserset
	}
	return nil
}

type isRule_Rule interface {
	isRule_Rule()
}

type Rule_This struct {
	This *This `protobuf:"bytes,1,opt,name=this,proto3,oneof"`
}

type Rule_ComputedUserset struct {
	ComputedUserset *ComputedUserset `protobuf:"bytes,2,opt,name=computedUserset,proto3,oneof"`
}

type Rule_TupleToUserset struct {
	TupleToUserset *TupleToUserset `protobuf:"bytes,3,opt,name=tupleToUserset,proto3,oneof"`
}

func (*Rule_This) isRule_Rule() {}

func (*Rule_ComputedUserset) isRule_Rule() {}

func (*Rule_TupleToUserset) isRule_Rule() {}

// This specifies a Rule which returns all users for a given (object, relation) pair.
// The rule performs userset chasing.
type This struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *This) Reset() {
	*x = This{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *This) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*This) ProtoMessage() {}

func (x *This) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use This.ProtoReflect.Descriptor instead.
func (*This) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{7}
}

// ComputerUserset specifies a rule to dynamically create a userset for a given object.
// The created Userset may then be used to perform additional lookups.
// It's functionally similar to "This", except it does checks using a volatile relation tuple.
type ComputedUserset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation string `protobuf:"bytes,1,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *ComputedUserset) Reset() {
	*x = ComputedUserset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputedUserset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputedUserset) ProtoMessage() {}

func (x *ComputedUserset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputedUserset.ProtoReflect.Descriptor instead.
func (*ComputedUserset) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{8}
}

func (x *ComputedUserset) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

// The TupleToUserset is a multistep rule that:
// - Fetches a Tupleset for the given object using TuplesetRelation
// - For each fetched tuple compute an userset using UsersetRelation
//
// For Check and Expand calls, the computed usersets are used to perform further lookups.
//
// A practical example:
// Let TuplesetRelation = "parent"
// Let UsersetRelation = "owner"
// Let the input object be "doc:readme"
// TupleToUserset would then:
// - Lookup all tuples matching (obj="doc:readme", relation="parent").
//   assume the matching tuples are [(obj="doc:readme", relation="parent", user=(id="dir:root", relation="..."))]
// - For each found tuple, it would compute the userset (obj=${result_tuple_userset_obj}, relation=UsersetRelation);
//   eg. it would compute the userset (obj="dir:root", relation="owner")
type TupleToUserset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TuplesetRelation        string `protobuf:"bytes,1,opt,name=tuplesetRelation,proto3" json:"tuplesetRelation,omitempty"`
	ComputerUsersetRelation string `protobuf:"bytes,2,opt,name=computerUsersetRelation,proto3" json:"computerUsersetRelation,omitempty"`
}

func (x *TupleToUserset) Reset() {
	*x = TupleToUserset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_namespace_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TupleToUserset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TupleToUserset) ProtoMessage() {}

func (x *TupleToUserset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_namespace_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TupleToUserset.ProtoReflect.Descriptor instead.
func (*TupleToUserset) Descriptor() ([]byte, []int) {
	return file_proto_namespace_proto_rawDescGZIP(), []int{9}
}

func (x *TupleToUserset) GetTuplesetRelation() string {
	if x != nil {
		return x.TuplesetRelation
	}
	return ""
}

func (x *TupleToUserset) GetComputerUsersetRelation() string {
	if x != nil {
		return x.ComputerUsersetRelation
	}
	return ""
}

var File_proto_namespace_proto protoreflect.FileDescriptor

var file_proto_namespace_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x52, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x53, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x52, 0x65, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x07, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x0e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x52, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x37, 0x0a,
	0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x22, 0x62, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x6f, 0x70, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x4e, 0x6f, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x70, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6c,
	0x65, 0x61, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x66, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x65,
	0x61, 0x66, 0x42, 0x06, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x7a, 0x0a, 0x06, 0x4f, 0x70,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x24, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x2b, 0x0a, 0x04, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x23,
	0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x74, 0x68, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x68, 0x69, 0x73, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x68, 0x69, 0x73, 0x12, 0x46, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x74,
	0x75, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x54, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x54, 0x68, 0x69, 0x73,
	0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x76, 0x0a, 0x0e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x75, 0x70, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x75, 0x70,
	0x6c, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x38, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x02, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2d, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x62, 0x61, 0x72, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_namespace_proto_rawDescOnce sync.Once
	file_proto_namespace_proto_rawDescData = file_proto_namespace_proto_rawDesc
)

func file_proto_namespace_proto_rawDescGZIP() []byte {
	file_proto_namespace_proto_rawDescOnce.Do(func() {
		file_proto_namespace_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_namespace_proto_rawDescData)
	})
	return file_proto_namespace_proto_rawDescData
}

var file_proto_namespace_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_namespace_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_namespace_proto_goTypes = []interface{}{
	(Operation)(0),          // 0: namespace.Operation
	(*Namespace)(nil),       // 1: namespace.Namespace
	(*Relation)(nil),        // 2: namespace.Relation
	(*UsersetRewrite)(nil),  // 3: namespace.UsersetRewrite
	(*Node)(nil),            // 4: namespace.Node
	(*OpNode)(nil),          // 5: namespace.OpNode
	(*Leaf)(nil),            // 6: namespace.Leaf
	(*Rule)(nil),            // 7: namespace.Rule
	(*This)(nil),            // 8: namespace.This
	(*ComputedUserset)(nil), // 9: namespace.ComputedUserset
	(*TupleToUserset)(nil),  // 10: namespace.TupleToUserset
}
var file_proto_namespace_proto_depIdxs = []int32{
	2,  // 0: namespace.Namespace.relations:type_name -> namespace.Relation
	3,  // 1: namespace.Relation.rewrite:type_name -> namespace.UsersetRewrite
	4,  // 2: namespace.UsersetRewrite.expressionTree:type_name -> namespace.Node
	5,  // 3: namespace.Node.opnode:type_name -> namespace.OpNode
	6,  // 4: namespace.Node.leaf:type_name -> namespace.Leaf
	4,  // 5: namespace.OpNode.left:type_name -> namespace.Node
	4,  // 6: namespace.OpNode.right:type_name -> namespace.Node
	0,  // 7: namespace.OpNode.op:type_name -> namespace.Operation
	7,  // 8: namespace.Leaf.rule:type_name -> namespace.Rule
	8,  // 9: namespace.Rule.this:type_name -> namespace.This
	9,  // 10: namespace.Rule.computedUserset:type_name -> namespace.ComputedUserset
	10, // 11: namespace.Rule.tupleToUserset:type_name -> namespace.TupleToUserset
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_namespace_proto_init() }
func file_proto_namespace_proto_init() {
	if File_proto_namespace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_namespace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersetRewrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leaf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*This); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputedUserset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_namespace_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TupleToUserset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_namespace_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Node_Opnode)(nil),
		(*Node_Leaf)(nil),
	}
	file_proto_namespace_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Rule_This)(nil),
		(*Rule_ComputedUserset)(nil),
		(*Rule_TupleToUserset)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_namespace_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_namespace_proto_goTypes,
		DependencyIndexes: file_proto_namespace_proto_depIdxs,
		EnumInfos:         file_proto_namespace_proto_enumTypes,
		MessageInfos:      file_proto_namespace_proto_msgTypes,
	}.Build()
	File_proto_namespace_proto = out.File
	file_proto_namespace_proto_rawDesc = nil
	file_proto_namespace_proto_goTypes = nil
	file_proto_namespace_proto_depIdxs = nil
}
