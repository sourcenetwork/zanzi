// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: zanzi/domain/relation_graph.proto

package domain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelationNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Node:
	//	*RelationNode_EntitySet
	//	*RelationNode_Entity
	//	*RelationNode_Wildcard
	Node isRelationNode_Node `protobuf_oneof:"node"`
}

func (x *RelationNode) Reset() {
	*x = RelationNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_domain_relation_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationNode) ProtoMessage() {}

func (x *RelationNode) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_domain_relation_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationNode.ProtoReflect.Descriptor instead.
func (*RelationNode) Descriptor() ([]byte, []int) {
	return file_zanzi_domain_relation_graph_proto_rawDescGZIP(), []int{0}
}

func (m *RelationNode) GetNode() isRelationNode_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (x *RelationNode) GetEntitySet() *EntitySetNode {
	if x, ok := x.GetNode().(*RelationNode_EntitySet); ok {
		return x.EntitySet
	}
	return nil
}

func (x *RelationNode) GetEntity() *EntityNode {
	if x, ok := x.GetNode().(*RelationNode_Entity); ok {
		return x.Entity
	}
	return nil
}

func (x *RelationNode) GetWildcard() *WildcardNode {
	if x, ok := x.GetNode().(*RelationNode_Wildcard); ok {
		return x.Wildcard
	}
	return nil
}

type isRelationNode_Node interface {
	isRelationNode_Node()
}

type RelationNode_EntitySet struct {
	EntitySet *EntitySetNode `protobuf:"bytes,1,opt,name=entity_set,json=entitySet,proto3,oneof"`
}

type RelationNode_Entity struct {
	Entity *EntityNode `protobuf:"bytes,2,opt,name=entity,proto3,oneof"`
}

type RelationNode_Wildcard struct {
	Wildcard *WildcardNode `protobuf:"bytes,3,opt,name=wildcard,proto3,oneof"`
}

func (*RelationNode_EntitySet) isRelationNode_Node() {}

func (*RelationNode_Entity) isRelationNode_Node() {}

func (*RelationNode_Wildcard) isRelationNode_Node() {}

// EntitySetNode models an inner node in the Relation Graph
// This node may or may not have edges to other RelationNodes
type EntitySetNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object   *Entity `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Relation string  `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
}

func (x *EntitySetNode) Reset() {
	*x = EntitySetNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_domain_relation_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySetNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySetNode) ProtoMessage() {}

func (x *EntitySetNode) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_domain_relation_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySetNode.ProtoReflect.Descriptor instead.
func (*EntitySetNode) Descriptor() ([]byte, []int) {
	return file_zanzi_domain_relation_graph_proto_rawDescGZIP(), []int{1}
}

func (x *EntitySetNode) GetObject() *Entity {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *EntitySetNode) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

// EntityNode models a terminal node in the Relation Graph,
// representing a system object
type EntityNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object *Entity `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *EntityNode) Reset() {
	*x = EntityNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_domain_relation_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityNode) ProtoMessage() {}

func (x *EntityNode) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_domain_relation_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityNode.ProtoReflect.Descriptor instead.
func (*EntityNode) Descriptor() ([]byte, []int) {
	return file_zanzi_domain_relation_graph_proto_rawDescGZIP(), []int{2}
}

func (x *EntityNode) GetObject() *Entity {
	if x != nil {
		return x.Object
	}
	return nil
}

// WildcardNode represents a placeholder node which matches
// all Entities within a resource
type WildcardNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *WildcardNode) Reset() {
	*x = WildcardNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_domain_relation_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WildcardNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WildcardNode) ProtoMessage() {}

func (x *WildcardNode) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_domain_relation_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WildcardNode.ProtoReflect.Descriptor instead.
func (*WildcardNode) Descriptor() ([]byte, []int) {
	return file_zanzi_domain_relation_graph_proto_rawDescGZIP(), []int{3}
}

func (x *WildcardNode) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type RelationTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node     *RelationNode   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Children []*RelationTree `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *RelationTree) Reset() {
	*x = RelationTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_domain_relation_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationTree) ProtoMessage() {}

func (x *RelationTree) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_domain_relation_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationTree.ProtoReflect.Descriptor instead.
func (*RelationTree) Descriptor() ([]byte, []int) {
	return file_zanzi_domain_relation_graph_proto_rawDescGZIP(), []int{4}
}

func (x *RelationTree) GetNode() *RelationNode {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *RelationTree) GetChildren() []*RelationTree {
	if x != nil {
		return x.Children
	}
	return nil
}

type AccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object   *Entity `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Relation string  `protobuf:"bytes,2,opt,name=relation,proto3" json:"relation,omitempty"`
	Subject  *Entity `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *AccessRequest) Reset() {
	*x = AccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_domain_relation_graph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRequest) ProtoMessage() {}

func (x *AccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_domain_relation_graph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRequest.ProtoReflect.Descriptor instead.
func (*AccessRequest) Descriptor() ([]byte, []int) {
	return file_zanzi_domain_relation_graph_proto_rawDescGZIP(), []int{5}
}

func (x *AccessRequest) GetObject() *Entity {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *AccessRequest) GetRelation() string {
	if x != nil {
		return x.Relation
	}
	return ""
}

func (x *AccessRequest) GetSubject() *Entity {
	if x != nil {
		return x.Subject
	}
	return nil
}

var File_zanzi_domain_relation_graph_proto protoreflect.FileDescriptor

var file_zanzi_domain_relation_graph_proto_rawDesc = []byte{
	0x0a, 0x21, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a,
	0x1f, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x4a,
	0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x08,
	0x77, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a,
	0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x57, 0x69, 0x6c, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x6c, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x0d,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61,
	0x6e, 0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x2a, 0x0a, 0x0c, 0x57, 0x69, 0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x3c, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69,
	0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e,
	0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a,
	0x69, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zanzi_domain_relation_graph_proto_rawDescOnce sync.Once
	file_zanzi_domain_relation_graph_proto_rawDescData = file_zanzi_domain_relation_graph_proto_rawDesc
)

func file_zanzi_domain_relation_graph_proto_rawDescGZIP() []byte {
	file_zanzi_domain_relation_graph_proto_rawDescOnce.Do(func() {
		file_zanzi_domain_relation_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_zanzi_domain_relation_graph_proto_rawDescData)
	})
	return file_zanzi_domain_relation_graph_proto_rawDescData
}

var file_zanzi_domain_relation_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_zanzi_domain_relation_graph_proto_goTypes = []interface{}{
	(*RelationNode)(nil),  // 0: sourcenetwork.zanzi.domain.RelationNode
	(*EntitySetNode)(nil), // 1: sourcenetwork.zanzi.domain.EntitySetNode
	(*EntityNode)(nil),    // 2: sourcenetwork.zanzi.domain.EntityNode
	(*WildcardNode)(nil),  // 3: sourcenetwork.zanzi.domain.WildcardNode
	(*RelationTree)(nil),  // 4: sourcenetwork.zanzi.domain.RelationTree
	(*AccessRequest)(nil), // 5: sourcenetwork.zanzi.domain.AccessRequest
	(*Entity)(nil),        // 6: sourcenetwork.zanzi.domain.Entity
}
var file_zanzi_domain_relation_graph_proto_depIdxs = []int32{
	1, // 0: sourcenetwork.zanzi.domain.RelationNode.entity_set:type_name -> sourcenetwork.zanzi.domain.EntitySetNode
	2, // 1: sourcenetwork.zanzi.domain.RelationNode.entity:type_name -> sourcenetwork.zanzi.domain.EntityNode
	3, // 2: sourcenetwork.zanzi.domain.RelationNode.wildcard:type_name -> sourcenetwork.zanzi.domain.WildcardNode
	6, // 3: sourcenetwork.zanzi.domain.EntitySetNode.object:type_name -> sourcenetwork.zanzi.domain.Entity
	6, // 4: sourcenetwork.zanzi.domain.EntityNode.object:type_name -> sourcenetwork.zanzi.domain.Entity
	0, // 5: sourcenetwork.zanzi.domain.RelationTree.node:type_name -> sourcenetwork.zanzi.domain.RelationNode
	4, // 6: sourcenetwork.zanzi.domain.RelationTree.children:type_name -> sourcenetwork.zanzi.domain.RelationTree
	6, // 7: sourcenetwork.zanzi.domain.AccessRequest.object:type_name -> sourcenetwork.zanzi.domain.Entity
	6, // 8: sourcenetwork.zanzi.domain.AccessRequest.subject:type_name -> sourcenetwork.zanzi.domain.Entity
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_zanzi_domain_relation_graph_proto_init() }
func file_zanzi_domain_relation_graph_proto_init() {
	if File_zanzi_domain_relation_graph_proto != nil {
		return
	}
	file_zanzi_domain_relationship_proto_init()
	file_zanzi_domain_selector_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zanzi_domain_relation_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_domain_relation_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitySetNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_domain_relation_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_domain_relation_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WildcardNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_domain_relation_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_domain_relation_graph_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zanzi_domain_relation_graph_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RelationNode_EntitySet)(nil),
		(*RelationNode_Entity)(nil),
		(*RelationNode_Wildcard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zanzi_domain_relation_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zanzi_domain_relation_graph_proto_goTypes,
		DependencyIndexes: file_zanzi_domain_relation_graph_proto_depIdxs,
		MessageInfos:      file_zanzi_domain_relation_graph_proto_msgTypes,
	}.Build()
	File_zanzi_domain_relation_graph_proto = out.File
	file_zanzi_domain_relation_graph_proto_rawDesc = nil
	file_zanzi_domain_relation_graph_proto_goTypes = nil
	file_zanzi_domain_relation_graph_proto_depIdxs = nil
}
