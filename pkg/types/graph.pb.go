// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: zanzi/types/graph.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GraphEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Dest   string `protobuf:"bytes,2,opt,name=dest,proto3" json:"dest,omitempty"`
	Label  string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *GraphEdge) Reset() {
	*x = GraphEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_types_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphEdge) ProtoMessage() {}

func (x *GraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_types_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphEdge.ProtoReflect.Descriptor instead.
func (*GraphEdge) Descriptor() ([]byte, []int) {
	return file_zanzi_types_graph_proto_rawDescGZIP(), []int{0}
}

func (x *GraphEdge) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GraphEdge) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *GraphEdge) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type GraphNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GraphNode) Reset() {
	*x = GraphNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_types_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphNode) ProtoMessage() {}

func (x *GraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_types_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphNode.ProtoReflect.Descriptor instead.
func (*GraphNode) Descriptor() ([]byte, []int) {
	return file_zanzi_types_graph_proto_rawDescGZIP(), []int{1}
}

func (x *GraphNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GraphNode) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// EdgeMap models a collection of edges
type EdgeMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edges map[string]*GraphEdge `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EdgeMap) Reset() {
	*x = EdgeMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_types_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeMap) ProtoMessage() {}

func (x *EdgeMap) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_types_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeMap.ProtoReflect.Descriptor instead.
func (*EdgeMap) Descriptor() ([]byte, []int) {
	return file_zanzi_types_graph_proto_rawDescGZIP(), []int{2}
}

func (x *EdgeMap) GetEdges() map[string]*GraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

// MapDiGraph models a generic Directed Graph using maps.
// Uses more memory for faster look-up - better for storage, bad for transmission.
type MapDiGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes        map[string]*GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ForwardEdges map[string]*EdgeMap   `protobuf:"bytes,2,rep,name=forward_edges,json=forwardEdges,proto3" json:"forward_edges,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BackEdges    map[string]*EdgeMap   `protobuf:"bytes,3,rep,name=back_edges,json=backEdges,proto3" json:"back_edges,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MapDiGraph) Reset() {
	*x = MapDiGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_types_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapDiGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapDiGraph) ProtoMessage() {}

func (x *MapDiGraph) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_types_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapDiGraph.ProtoReflect.Descriptor instead.
func (*MapDiGraph) Descriptor() ([]byte, []int) {
	return file_zanzi_types_graph_proto_rawDescGZIP(), []int{3}
}

func (x *MapDiGraph) GetNodes() map[string]*GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *MapDiGraph) GetForwardEdges() map[string]*EdgeMap {
	if x != nil {
		return x.ForwardEdges
	}
	return nil
}

func (x *MapDiGraph) GetBackEdges() map[string]*EdgeMap {
	if x != nil {
		return x.BackEdges
	}
	return nil
}

// ListDiGraph models a generic Directed Graph using the adjency list model.
// Has slower lookup than MapDiGraph but has a smaller memory footprint.
type ListDiGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*GraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *ListDiGraph) Reset() {
	*x = ListDiGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zanzi_types_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDiGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDiGraph) ProtoMessage() {}

func (x *ListDiGraph) ProtoReflect() protoreflect.Message {
	mi := &file_zanzi_types_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDiGraph.ProtoReflect.Descriptor instead.
func (*ListDiGraph) Descriptor() ([]byte, []int) {
	return file_zanzi_types_graph_proto_rawDescGZIP(), []int{4}
}

func (x *ListDiGraph) GetNodes() []*GraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListDiGraph) GetEdges() []*GraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

var File_zanzi_types_graph_proto protoreflect.FileDescriptor

var file_zanzi_types_graph_proto_rawDesc = []byte{
	0x0a, 0x17, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x22, 0x2f, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x07, 0x45, 0x64, 0x67, 0x65, 0x4d, 0x61, 0x70,
	0x12, 0x43, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x4d, 0x61, 0x70, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x64, 0x67, 0x65, 0x73, 0x1a, 0x5e, 0x0a, 0x0a, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xae, 0x04, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x44, 0x69, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x12, 0x46, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x61, 0x70, 0x44, 0x69, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0d,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x61, 0x70, 0x44, 0x69, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0a, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a,
	0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x69,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x64, 0x67, 0x65, 0x73, 0x1a,
	0x5e, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a,
	0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x63, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x60, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x45, 0x64, 0x67, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x69, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x3a, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x7a, 0x61, 0x6e, 0x7a, 0x69, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x7a, 0x61, 0x6e, 0x7a, 0x69,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_zanzi_types_graph_proto_rawDescOnce sync.Once
	file_zanzi_types_graph_proto_rawDescData = file_zanzi_types_graph_proto_rawDesc
)

func file_zanzi_types_graph_proto_rawDescGZIP() []byte {
	file_zanzi_types_graph_proto_rawDescOnce.Do(func() {
		file_zanzi_types_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_zanzi_types_graph_proto_rawDescData)
	})
	return file_zanzi_types_graph_proto_rawDescData
}

var file_zanzi_types_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_zanzi_types_graph_proto_goTypes = []interface{}{
	(*GraphEdge)(nil),   // 0: sourcenetwork.zanzi.types.GraphEdge
	(*GraphNode)(nil),   // 1: sourcenetwork.zanzi.types.GraphNode
	(*EdgeMap)(nil),     // 2: sourcenetwork.zanzi.types.EdgeMap
	(*MapDiGraph)(nil),  // 3: sourcenetwork.zanzi.types.MapDiGraph
	(*ListDiGraph)(nil), // 4: sourcenetwork.zanzi.types.ListDiGraph
	nil,                 // 5: sourcenetwork.zanzi.types.EdgeMap.EdgesEntry
	nil,                 // 6: sourcenetwork.zanzi.types.MapDiGraph.NodesEntry
	nil,                 // 7: sourcenetwork.zanzi.types.MapDiGraph.ForwardEdgesEntry
	nil,                 // 8: sourcenetwork.zanzi.types.MapDiGraph.BackEdgesEntry
}
var file_zanzi_types_graph_proto_depIdxs = []int32{
	5,  // 0: sourcenetwork.zanzi.types.EdgeMap.edges:type_name -> sourcenetwork.zanzi.types.EdgeMap.EdgesEntry
	6,  // 1: sourcenetwork.zanzi.types.MapDiGraph.nodes:type_name -> sourcenetwork.zanzi.types.MapDiGraph.NodesEntry
	7,  // 2: sourcenetwork.zanzi.types.MapDiGraph.forward_edges:type_name -> sourcenetwork.zanzi.types.MapDiGraph.ForwardEdgesEntry
	8,  // 3: sourcenetwork.zanzi.types.MapDiGraph.back_edges:type_name -> sourcenetwork.zanzi.types.MapDiGraph.BackEdgesEntry
	1,  // 4: sourcenetwork.zanzi.types.ListDiGraph.nodes:type_name -> sourcenetwork.zanzi.types.GraphNode
	0,  // 5: sourcenetwork.zanzi.types.ListDiGraph.edges:type_name -> sourcenetwork.zanzi.types.GraphEdge
	0,  // 6: sourcenetwork.zanzi.types.EdgeMap.EdgesEntry.value:type_name -> sourcenetwork.zanzi.types.GraphEdge
	1,  // 7: sourcenetwork.zanzi.types.MapDiGraph.NodesEntry.value:type_name -> sourcenetwork.zanzi.types.GraphNode
	2,  // 8: sourcenetwork.zanzi.types.MapDiGraph.ForwardEdgesEntry.value:type_name -> sourcenetwork.zanzi.types.EdgeMap
	2,  // 9: sourcenetwork.zanzi.types.MapDiGraph.BackEdgesEntry.value:type_name -> sourcenetwork.zanzi.types.EdgeMap
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_zanzi_types_graph_proto_init() }
func file_zanzi_types_graph_proto_init() {
	if File_zanzi_types_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zanzi_types_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_types_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_types_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_types_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapDiGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zanzi_types_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDiGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zanzi_types_graph_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_zanzi_types_graph_proto_goTypes,
		DependencyIndexes: file_zanzi_types_graph_proto_depIdxs,
		MessageInfos:      file_zanzi_types_graph_proto_msgTypes,
	}.Build()
	File_zanzi_types_graph_proto = out.File
	file_zanzi_types_graph_proto_rawDesc = nil
	file_zanzi_types_graph_proto_goTypes = nil
	file_zanzi_types_graph_proto_depIdxs = nil
}
